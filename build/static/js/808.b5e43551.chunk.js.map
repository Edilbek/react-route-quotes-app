{"version":3,"file":"static/js/808.b5e43551.chunk.js","mappings":"8NACA,EAAuB,wB,SCkBvB,EAhBkB,SAAH,GAA8B,IAAxBA,EAAI,EAAJA,KAAMC,EAAM,EAANA,OAAQC,EAAE,EAAFA,GACjC,OACE,gBAAIC,UAAWC,EAAa,WAC1B,+BACE,iCACE,uBAAIJ,OAEN,gCAAaC,QAEf,SAAC,KAAI,CAACE,UAAU,MAAME,GAAE,kBAAaH,GAAK,+BAKhD,EChBA,EAAuB,wBAAvB,EAAyD,2BCkDzD,EAnCkB,SAAH,GAAoB,IAAdI,EAAM,EAANA,OACbC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAGXC,EAAgD,QADlC,IAAIC,gBAAgBH,EAASI,QACXC,IAAI,QAEpCC,EAjBW,SAACT,EAAQU,GAC1B,OAAOV,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIH,EACKE,EAAOhB,GAAKiB,EAAOjB,GAAK,GAAK,EAE7BgB,EAAOhB,GAAKiB,EAAOjB,GAAK,GAAK,CAExC,GACF,CASuBkB,CAAWd,EAAQK,GASxC,OACE,UAAC,EAAAU,SAAQ,YACP,gBAAKlB,UAAWC,EAAgB,UAC9B,oBAAQkB,QAVe,WAC3Bf,EAAQgB,KAAK,CACXC,SAAUf,EAASe,SACnBX,OAAO,SAAD,OAAYF,EAAoB,OAAS,QAEnD,EAK4C,kBAAOA,EAAoB,OAAS,YAE5E,eAAIR,UAAWC,EAAa,SACzBW,EAAaU,KAAI,SAACC,GAAK,OACtB,SAAC,EAAS,CAERxB,GAAIwB,EAAMxB,GACVD,OAAQyB,EAAMzB,OACdD,KAAM0B,EAAM1B,MAHP0B,EAAMxB,GAIX,QAKZ,E,SChDA,EAA2B,gCCa3B,EAXsB,WACpB,OACE,iBAAKC,UAAWC,EAAiB,WAC/B,6CACA,SAAC,KAAI,CAACC,GAAG,aAAaF,UAAU,MAAK,2BAK3C,EC0BA,EA7BkB,WAChB,OAA2DwB,EAAAA,EAAAA,GACzDC,EAAAA,IACA,GAFMC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OAAcC,EAAY,EAAlBC,KAAoBC,EAAK,EAALA,MASjD,OAJAC,EAAAA,EAAAA,YAAU,WACRL,GACF,GAAG,CAACA,IAEW,YAAXC,GACK,gBAAK3B,UAAU,WAAU,UAC9B,SAACgC,EAAA,EAAc,MAIfF,GACK,cAAG9B,UAAU,mBAAkB,SAAE8B,IAG3B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,QAK3D,SAAC,EAAS,CAAC9B,OAAQyB,KAJZ,SAAC,EAAa,GAMzB,C","sources":["webpack://react-complete-guide/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-complete-guide/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__Q6KwW\"};","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = ({ text, author, id }) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{text}</p>\n        </blockquote>\n        <figcaption>{author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__MLz6k\",\"sorting\":\"QuoteList_sorting__GDrEn\"};","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = ({ quotes }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAsceding = queryParams.get('sort') === 'asc';\n  \n  const sortedQuotes = sortQuotes(quotes, isSortingAsceding);\n  \n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAsceding ? 'desc' : 'asc')}`\n    });\n  };\n  \n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAsceding ? 'Desc' : 'Asc'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__EUQsM\"};","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to='/new-quote' className='btn'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, { useEffect } from 'react'\n\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\n\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\n\nconst AllQuotes = () => {\n  const { sendRequest, status, data: loadedQuotes, error } = useHttp(\n    getAllQuotes,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return <div className='centered'>\n      <LoadingSpinner />\n    </div>\n  }\n\n  if (error) {\n    return <p className='centered focused'>{error}</p>\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />\n  }\n  \n  return (\n    <QuoteList quotes={loadedQuotes} />\n  )\n}\n\nexport default AllQuotes;"],"names":["text","author","id","className","classes","to","quotes","history","useHistory","location","useLocation","isSortingAsceding","URLSearchParams","search","get","sortedQuotes","ascending","sort","quoteA","quoteB","sortQuotes","Fragment","onClick","push","pathname","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"sourceRoot":""}